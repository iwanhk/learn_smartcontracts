from brownie import accounts, network, config
from scripts.tools import *
import os
import random

LOCAL_NETWORKS=['development', 'mainnet-fork']
TEST_NETWORKS=['rinkeby', 'bsc-test']
REAL_NETWORKS=['mainnet', 'polygon']
DEPLOYED_ADDR={'rinkeby': ["0x22c1b71bf659a36fad8a476c3499964d2714c13b", "0x8525e4bf39ce1f5e9a3c4cd4fc29c39828edd8e9"]}

def get_accounts(active_network):
    if active_network == 'development':
        admin= accounts[0]
        creator= accounts[1]
        consumer= accounts[2]
        iwan= accounts[3]
    else:
        admin= accounts.add(config['wallets']['admin'])
        creator= accounts.add(config['wallets']['creator'])
        consumer= accounts.add(config['wallets']['consumer'])
        iwan= accounts.add(config['wallets']['iwan'])

    balance_alert(admin, "admin")
    balance_alert(creator, "creator")
    balance_alert(consumer, "consumer")
    balance_alert(iwan, "consumer")
    return [admin, creator, consumer, iwan]

def flat_contract(name:str, meta_data:dict)-> None:
    if not os.path.exists(name+ '_flat'):
        os.mkdir(name+ '_flat')

    with open(name+ '_flat/settings.json', 'w') as f:
        json.dump(meta_data['standard_json_input']['settings'], f)

    for file in meta_data['standard_json_input']['sources'].keys():
        print(f"Flatten file {file} ")
        with open(name+ '_flat/'+ file, 'w') as f:
            content= meta_data['standard_json_input']['sources'][file]['content'].split('\n')

            for line in content:
                if 'import "' in line:
                    f.write(line.replace('import "', 'import "./')+'\n')
                else:
                    f.write(line+'\n')
            f.write(f'\n// Generated by {__file__} \n')

